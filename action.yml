name: 'Repolinter Action'
description: 'Runs Repolinter against a repository, then uses the results to open an issue.'
author: 'New Relic Opensource'
inputs:
  token:
    required: false
    description: >
      Personal access token (PAT) used to create an issue on this repository.
      This token is optional and only required if this actions is configured to
      output an issue (see output_type). This token must have the `public_repo`
      scope for the current repository in order to work properly.
    
      [Learn more about creating and using encrypted secrets](https://help.github.com/en/actions/automating-your-workflow-with-github-actions/creating-and-using-encrypted-secrets)
  config_file:
    required: false
    description: >
      A path to the JSON Repolinter ruleset to use, relative to the workflow
      working directory (i.e. under `$GITHUB_WORKSPACE`). 
      
      This option is mutually exclusive with config_url. If this option and 
      config-url are not specified, Repolinter's default ruleset will be used.
  config_url:
    required: false
    description: >
      A URL to pull the JSON Repolinter ruleset from. This URL must be accessible
      by the actions runner and return raw JSON file on GET.

      This option can be used to pull a ruleset from GitHub using the
      raw.githubusercontent.com URL (ex. https://raw.githubusercontent.com/aperture-science-incorporated/.github/master/repolinter-newrelic-communityplus.json).

      This option is mutually exclusive with config_url. If this option and 
      config-url are not specified, Repolinter's default ruleset will be used.
  repository:
    required: false
    description: >
      The repository name and owner, formatted like so: `owner/repository`.
      This input determines which repository repolinter-action will create
      an issue on, if that functionality is enabled.

      It is recommended that this option is left as the default value.
    default: ${{ github.repository }}
  output_type:
    required: false
    description: >
      Where repolinter-action should put the linting results. There are two
      options available:
      * "exit-code": repolinter-action will print the lint output to the console
        and set the exit code to result.passed. This output type is most useful for
        PR status checks.
      * "issue": repolinter-action will create a GitHub issue on the current
        repository with the repolinter output and always exit 0. See the README for
        more details on issue outputting behavior. This output type is ideal for 
        non-intrusive notification.
    default: 'exit-code'
  output_name:
    required: false
    description: >
      The title to use for the issue created by repolinter-action. This title 
      should indicate the purpose of the issue, as well as that it was created by
      a bot.

      This option will be ignored if output_type != "issue".
    default: '[Repolinter] Open Source Policy Issues'
  label_name:
    required: false
    description: >
      The name to use for the issue label created by repolinter-action. This name
      should be unique to repolinter-action (i.e. not used by any other issue) to
      prevent repolinter-action from getting confused.

      This option will be ignored if output_type != "issue".
    default: 'repolinter'
  label_color:
    required: false
    description: >
      The color to use for the issue label created by repolinter-action. The value
      for this option should be an unprefixed RRGGBB hex string (ex. ff568a).
      The default value is a shade of yellow.

      This option will be ignored if output_type != "issue".
    default: 'fbca04'
outputs:
  passed:
    description: 'A boolean indicating whether or not the Repolinter run passed or failed.'
  errored:
    description: 'A boolean indicating whether or not the action threw any errors.'
  json_output:
    description: 'The JSON output from the repolinter run, from repolinter.jsonFormatter.'
runs:
  using: 'node12'
  main: 'dist/index.js'
